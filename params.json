{"name":"ARGweaver","tagline":"Sampling and manipulating genome-wide ancestral recombination graphs (ARGs)","body":"ARGweaver\r\n=========\r\n\r\n*Sampling and manipulating genome-wide ancestral recombination graphs (ARGs).*  \r\n\r\nThe ARGweaver software package contains programs and libraries for\r\nsampling and manipulating ancestral recombination graphs (ARGs). An ARG\r\nis a rich data structure for representing the ancestry of DNA\r\nsequences undergoing coalescence and recombination.\r\n\r\n*ARGweaver citation:*\r\n[Matthew D. Rasmussen, Adam Siepel. Genome-wide inference of ancestral\r\nrecombination graphs. 2013. arXiv:1306.5110 [q-bio.PE]](http://arxiv.org/abs/1306.5110)\r\n\r\n\r\n## Download\r\n\r\nARGweaver can be [downloaded](http://mdrasmus.github.io/argweaver) or \r\n[forked](https://github.com/mdrasmus/argweaver/) from GitHub.\r\n\r\n\r\n## Documentation\r\n\r\nSee the [manual](http://mdrasmus.github.io/argweaver/doc/)\r\nfor documentation on the programs and file formats associated with ARGweaver.\r\n\r\n\r\n## Requirements\r\n\r\nThe following dependencies must be installed to compile and run\r\nARGweaver:\r\n\r\n- C++ compiler (e.g. [g++](http://gcc.gnu.org))\r\n- [Python](http://python.org)\r\n\r\n\r\n## Install\r\n\r\nTo compile the ARGweaver commands and library use the Makefile:\r\n\r\n```\r\nmake\r\n```\r\n\r\nOnce compiled, install the ARGweaver programs (default install in\r\n`/usr`) using:\r\n\r\n```\r\nmake install\r\n```\r\n\r\nBy default this will install all files into `/usr`, which may require \r\nsuper user permissions.  To specify your own installation path use:\r\n\r\n```\r\nmake install prefix=$HOME/local\r\n```\r\n\r\nIf you use this option, make sure `$HOME/local/bin` is in your `PATH` and\r\n`$HOME/local/lib/python2.X/site-packages` is in your `PYTHONPATH`.\r\n\r\nARGweaver can also run directly from the source directory.  Simply add the\r\n`bin/` directory to your `PATH` environment variable or create symlinks to the\r\nscripts within `bin/` to any directory on your `PATH`. Also add the\r\nargweaver source directory to your `PYTHONPATH`. See `examples/` for details.\r\n\r\n\r\n## Quick Start\r\n\r\nHere is a brief example of an ARG simulation and analysis.\r\nTo generate simulated data containing a set of DNA sequences and an\r\nARG describing their ancestry the following command can be used:\r\n\r\n```\r\narg-sim \\\r\n    -k 8 -L 100000 \\\r\n    -N 10000 -r 1.6e-8 -m 1.8e-8 \\\r\n    -o test1/test1\r\n```\r\n\r\nThis will create an ARG with 8 sequences each 100kb in length evolving in\r\na population of effective size 10,000 (diploid), with recombination rate\r\n1.6e-8 recombinations/site/generation and mutation rate 1.8e-8 \r\nmutations/generation/site. The output will be stored in the following files:\r\n\r\n```\r\ntest1/test1.arg   -- an ARG stored in *.arg format\r\ntest1/test1.sites -- sequences stored in *.sites format\r\n```\r\n\r\nTo infer an ARG from the simulated sequences, the following command \r\ncan be used:\r\n\r\n```\r\narg-sample \\\r\n    -s test1/test1.sites \\\r\n    -N 10000 -r 1.6e-8 -m 1.8e-8 \\\r\n    --ntimes 20 --maxtime 200e3 -c 10 -n 100 \\\r\n    -o test1/test1.sample/out\r\n```\r\n\r\nThis will use the sequences in `test1/test1.sites` and it assumes the\r\nsame population parameters as the simulation (i.e. `-N 10000 -r 1.6e-8\r\n-m 1.8e-8`).  Also several sampling specific options are given \r\n(i.e. 20 discretized time steps, a maximum time of 200,000 generations, \r\na compression of 10bp for the sequences, and 100 sampling iterations. \r\nAfter sampling the following files will be generated:\r\n\r\n```\r\ntest1/test1.sample/out.log\r\ntest1/test1.sample/out.stats\r\ntest1/test1.sample/out.0.smc.gz\r\ntest1/test1.sample/out.10.smc.gz\r\ntest1/test1.sample/out.20.smc.gz\r\n...\r\ntest1/test1.sample/out.100.smc.gz\r\n```\r\n\r\nThe file `out.log` contains a log of the sampling procedure,\r\n`out.stats` contains various ARG statistics (e.g. number of\r\nrecombinations, ARG posterior probability, etc), and `out.0.smc.gz`\r\nthrough `out.100.smc.gz` contain 11 samples of an ARG in *.smc file\r\nformat.\r\n\r\nTo estimate the time to most recent common ancestor (TMRCA) across\r\nthese samples, the following command can be used:\r\n\r\n```\r\narg-extract-tmrca test1/test1.sample/out.%d.smc.gz \\\r\n    > test1/test1.tmrca.txt\r\n```\r\n\r\nThis will create a tab-delimited text file containing six columns:\r\nchromosome, start, end, posterior mean TMRCA (generations),\r\nlower 2.5 percentile TMRCA, and upper 97.5 percentile TMRCA. The first\r\nfour columns define a track of TMRCA across the genomic region in\r\nBED file format.\r\n\r\nMany other statistics can be extracted from sampled ARGs. For more details\r\nsee `examples/`.\r\n\r\n\r\n## Development\r\n\r\nThe following Python libraries are needed for developing ARGweaver:\r\n\r\n```\r\nnose\r\npyflakes\r\npep8\r\n```\r\n\r\nThese can be installed using\r\n\r\n```\r\npip install -r requirements-dev.txt\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}